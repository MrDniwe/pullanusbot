version: 2
jobs:
  build:
    docker:
      - image: circleci/golang
    environment:
      - DEP_VERSION: 0.5.0
    working_directory: /go/src/github.com/ailinykh/pullanusbot
    steps:
      - checkout
      - run:
          name: Download Libraries
          command: |
            if [ ! -d /go/src/github.com/ailinykh/pullanusbot/vendor ]; then
              curl -L -s https://github.com/golang/dep/releases/download/v${DEP_VERSION}/dep-linux-amd64 -o /go/bin/dep
              chmod +x /go/bin/dep
              /go/bin/dep ensure
            fi
      - run: 
          name: Setup Environment
          command: |
            echo 'export TAG=0.1.${CIRCLE_BUILD_NUM}' >> $BASH_ENV
            echo 'export IMAGE_NAME=pullanusbot' >> $BASH_ENV
      - run:
          name: Run Tests
          command: go test -race -v -coverprofile=coverage.txt -covermode=atomic
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build and push Docker image
          command: |
            docker build -t ailinykh/$IMAGE_NAME:$TAG .
            echo $DOCKER_PWD | docker login -u $DOCKER_LOGIN --password-stdin
            docker push ailinykh/$IMAGE_NAME:$TAG
      - run:
          name: Publish coverage stats
          command: bash <(curl -s https://codecov.io/bash)
      - run:
          name: Deploy app to Digital Ocean Server via Docker
          command: |
            ssh -o StrictHostKeyChecking=no root@proxy.ailinykh.com "/bin/bash ./pullanusbot/deploy_app.sh $TAG"
      - save_cache:
          key: gopkg-{{ .Branch }}-{{ checksum "Gopkg.lock" }}
          paths:
            - /go/src/github.com/ailinykh/pullanusbot/vendor