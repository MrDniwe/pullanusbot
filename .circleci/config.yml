version: 2.1
executors:
  my-executor:
    docker:
      - image: circleci/golang
    environment:
      - DEP_VERSION: 0.5.0
      - IMAGE_NAME: pullanusbot
      - TAG: 0.1.{{ .BuildNum }}
    working_directory: /go/src/github.com/ailinykh/pullanusbot

jobs:
  setup:
    executor: my-executor
    steps:
      - checkout
      - run: |
          if [ ! -d vendor ]; then
            curl -L -s https://github.com/golang/dep/releases/download/v${DEP_VERSION}/dep-linux-amd64 -o /go/bin/dep
            chmod +x /go/bin/dep
            /go/bin/dep ensure
          fi

  test:
    executor: my-executor
    steps:
      - run: go test -race -v -coverprofile=coverage.txt -covermode=atomic

  coverage:
    executor: my-executor
    steps:
      - run: bash <(curl -s https://codecov.io/bash)

  build:
    executor: my-executor
    steps:
      - run: |
          docker build -t ailinykh/$IMAGE_NAME:$TAG .
          echo $DOCKER_PWD | docker login -u $DOCKER_LOGIN --password-stdin
          docker push ailinykh/$IMAGE_NAME:$TAG
      - save_cache:
          key: gopkg-{{ .Branch }}-{{ checksum "Gopkg.lock" }}
          paths:
            - vendor
    
  deploy:
    executor: my-executor
    steps:
      - run:
          name: Deploy app to Digital Ocean Server via Docker
          command: ssh -o StrictHostKeyChecking=no root@proxy.ailinykh.com "/bin/bash ./pullanusbot/deploy_app.sh $TAG"

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - setup
      - test:
          requires:
            - setup
      - coverage:
          requires:
            - test
      - build:
          requires:
            - test
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - build